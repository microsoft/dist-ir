# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Linting, formatting, and tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LLVM_COMMIT: 23d183f190508e519fa044aa22985fe298278ae7
      PYTHONPATH: llvm-build/python/
    steps:
    - uses: actions/checkout@v2
 
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install pip (and get cache dir)
      id: pip-cache
      run: |
        python -m pip install --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install pylint pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Check formatting (black)
      run: black --diff --check .

    - name: Cache MLIR Python bindings
      id: cache
      uses: actions/cache@v2
      with:
        path: ../llvm-build
        key: llvm-${{ env.LLVM_COMMIT }}

    - name: Build MLIR Python bindings
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pushd ..
        pip install pybind11 cmake ninja
        git clone https://github.com/llvm/llvm-project.git
        pushd llvm-project
        git checkout $LLVM_COMMIT
        popd
        mkdir -p llvm-build
        pushd llvm-build
        cmake -G Ninja ../llvm-project/llvm \
          -DLLVM_ENABLE_PROJECTS=mlir \
          -DLLVM_TARGETS_TO_BUILD="X86" \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_ENABLE_ASSERTIONS=ON \
          -DMLIR_BINDINGS_PYTHON_ENABLED=ON
        ninja check-mlir
        popd
        popd

    - name: 'Install dist_ir'
      run: python setup.py install

    - name: Test with pytest
      run: pytest
